From b7d66394d438c76ea813f35963c5ba7241cfb891 Mon Sep 17 00:00:00 2001
From: Ferry Toth <ftoth@exalondelft.nl>
Date: Mon, 1 Aug 2022 22:39:30 +0200
Subject: [PATCH] WIP: serial: 8250_dma: use sgl on transmit

Signed-off-by: Ferry Toth <ftoth@exalondelft.nl>
---
 drivers/tty/serial/8250/8250.h     |  3 +++
 drivers/tty/serial/8250/8250_dma.c | 28 ++++++++++++++++++++++++----
 2 files changed, 27 insertions(+), 4 deletions(-)

diff --git a/drivers/tty/serial/8250/8250.h b/drivers/tty/serial/8250/8250.h
index 696030cfcb09..69d127dc2581 100644
--- a/drivers/tty/serial/8250/8250.h
+++ b/drivers/tty/serial/8250/8250.h
@@ -51,6 +51,9 @@ struct uart_8250_dma {
 	unsigned char		tx_running;
 	unsigned char		tx_err;
 	unsigned char		rx_running;
+
+	unsigned int		dma_tx_nents;
+	struct scatterlist	tx_sgl[2];
 };
 
 struct old_serial_port {
diff --git a/drivers/tty/serial/8250/8250_dma.c b/drivers/tty/serial/8250/8250_dma.c
index a8dba4a0a8fb..2c4d0eb1a769 100644
--- a/drivers/tty/serial/8250/8250_dma.c
+++ b/drivers/tty/serial/8250/8250_dma.c
@@ -62,10 +62,13 @@ static void __dma_rx_complete(void *param)
 int serial8250_tx_dma(struct uart_8250_port *p)
 {
 	struct uart_8250_dma		*dma = p->dma;
+	struct scatterlist 		*sgl = dma->tx_sgl;
 	struct circ_buf			*xmit = &p->port.state->xmit;
 	struct dma_async_tx_descriptor	*desc;
 	struct uart_port		*up = &p->port;
 	int ret;
+	size_t				chunk1, chunk2;
+	int				head, tail;
 
 	if (dma->tx_running) {
 		if (up->x_char) {
@@ -83,7 +86,24 @@ int serial8250_tx_dma(struct uart_8250_port *p)
 		return 0;
 	}
 
-	dma->tx_size = CIRC_CNT_TO_END(xmit->head, xmit->tail, UART_XMIT_SIZE);
+	head = READ_ONCE(xmit->head);
+	tail = READ_ONCE(xmit->tail);
+	dma->dma_tx_nents = 1;
+	chunk1 = CIRC_CNT_TO_END(head, tail, UART_XMIT_SIZE);
+	chunk2 = CIRC_CNT(head, tail, UART_XMIT_SIZE) - chunk1;
+	if (chunk2 == 0) {
+		sg_init_one(sgl, xmit->buf + tail, chunk1);
+	} else {
+		dma->dma_tx_nents++;
+		sg_init_table(sgl, dma->dma_tx_nents);
+		sg_set_buf(&sgl[0], xmit->buf + tail, chunk1);
+		sg_set_buf(&sgl[1], xmit->buf, chunk2);
+		sg_dma_address(&sgl[1]) = dma->tx_addr;
+		sg_dma_len(&sgl[1]) = chunk2;
+	}
+	sg_dma_address(&sgl[0]) = dma->tx_addr + tail;
+	sg_dma_len(&sgl[0]) = chunk1;
+	dma->tx_size = chunk1 + chunk2;
 
 	serial8250_do_prepare_tx_dma(p);
 
@@ -106,10 +126,10 @@ int serial8250_tx_dma(struct uart_8250_port *p)
 				   UART_XMIT_SIZE, DMA_TO_DEVICE);
 
 	dma_async_issue_pending(dma->txchan);
-	serial8250_clear_THRI(p);
-	if (dma->tx_err)
+	if (dma->tx_err) {
 		dma->tx_err = 0;
-
+		serial8250_clear_THRI(p);
+	}
 	return 0;
 err:
 	dma->tx_err = 1;
-- 
2.34.1

